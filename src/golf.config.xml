<?xml version="1.0" ?>
<DataTierGenerator xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="config.xsd">
    <config>
	<setting name="Server" value="olympus" />
	<setting name="Database" value="crandall_golf" />
	<setting name="User" value="sa" />
	<setting name="Password" value="1qaz2wsx" />
	<setting name="RootDirectory" value="c:\Data\work\Golf\Tournament\src\" />
	<setting name="SqlScriptDirectory" value="SQL" />
	<setting name="DaoClassDirectory" value="DAO" />
	<setting name="DoClassDirectory" value="DataObject" />
	<setting name="CollectionClassDirectory" value="DataObject" />
	<setting name="TypesClassDirectory" value="Types" />
	<setting name="SingleFile" value="False" />
	<setting name="GenerateSqlViewScripts" value="False" />
	<setting name="GenerateSqlTableScripts" value="True" />
	<setting name="UseViews" value="True" />
	<setting name="GenerateDataObjectClasses" value="True" />
	<setting name="ScriptDropStatement" value="True" />
	<setting name="StoredProcNameFormat" value="proc{%TABLE_NAME%}{%PROC_TYPE%}" />
	<setting name="RootNameSpace" value="Golf.Tournament" />
	<setting name="GenerateProcsForForeignKey" value="False" />
	<setting name="GenerateSelectStoredProcs" value="False" />
	<setting name="GenerateOnlyPrimaryDeleteStoredProc" value="True" />
	<setting name="AllowUpdateOfPrimaryKey" value="False" />
	<setting name="AutoDiscoverEntities" value="False" />
	<setting name="AutoDiscoverProperties" value="False" />
	<setting name="AutoDiscoverAttributes" value="False" />
	<setting name="DataObjectBaseClass" value="Spring2.Core.DataObject.DataObject" />
	<setting name="DAOBaseClass" value="Spring2.Core.DAO.EntityDAO" />
	<setting name="DataObjectNameFormat" value="{0}Data" />
	<setting name="DaoNameFormat" value="{0}Dao" />
    </config>
    <entities>
	<entity name="Tournament" sqlentity="Tournament">
	    <properties>
		<property name="TournamentId" type="IdType" column="*" />
		<property name="Name" type="StringType" column="*" />
		<property name="Description" type="StringType" column="*" />
		<property name="NumberOfTeams" type="IntegerType" column="*" />
		<property name="TeamSize" type="TeamSizeEnum" column="*" />
		<property name="Format" type="TournamentFormatEnum" column="*" />
		<property name="RegistrationBeginDate" type="DateType" column="*" />
		<property name="RegistrationEndDate" type="DateType" column="*" />
		<property name="CancellationCutoffDate" type="DateType" column="*" />
		<property name="RegistrationFee" type="CurrencyType" column="*" />
		<property name="RegistrationFeeDescription" type="StringType" column="*" />
		<property name="DatesText" type="StringType" column="*" />
		<property name="PrizesText" type="StringType" column="*" />
		<property name="SponsorsText" type="StringType" column="*" />
		<property name="LocationsText" type="StringType" column="*" />
		<property name="Organizer.OrganizerId" type="IdType" column="OrganizerId" />
		<property name="Organizer" type="OrganizerData" />
		<property name="RegisteredParticipants" type="IntegerType" column="*" />
		<property name="MaximumHandicap" type="IntegerType" column="*" />
		<property name="Teams" type="TeamCollection">
		    List of TeamData objects.
		</property>
		<property name="Participants" type="ParticipantCollection">
		    List of ParticipantData objects.
		</property>
	    </properties>
	</entity>
	<entity name="Team" sqlentity="Team">
	    <properties>
		<property name="TeamId" type="IdType" column="*" />
		<property name="RegistrationKey" type="StringType" column="*" />
		<property name="Status" type="TeamStatusEnum" column="*" />
		<property name="TournamentId" type="IdType" column="*" />
		<property name="Participants" type="IList" concretetype="ArrayList">
		    List of DateType objects with the tournament dates.
		</property>
	    </properties>
	    <finders>
		<finder name="FindByTournamentId">
		    <properties>
			<property name="TournamentId" />
		    </properties>
		</finder>
	    </finders>
	</entity>
	<entity name="Golfer" sqlentity="Golfer">
	    <properties>
		<property name="GolferId" type="IdType" column="*" />
		<property name="FirstName" type="StringType" column="*" />
		<property name="MiddleInitial" type="StringType" column="*" />
		<property name="LastName" type="StringType" column="*" />
		<property name="Phone" type="StringType" column="*" />
		<property name="Email" type="StringType" column="*" />
		<property name="Address" type="AddressData" />
		<property name="Address.Address1" type="StringType" column="Address1" />
		<property name="Address.Address2" type="StringType" column="Address2" />
		<property name="Address.City" type="StringType" column="City" />
		<property name="Address.State" type="USStateCodeEnum" column="State" />
		<property name="Address.Country" type="StringType" column="Country" />
		<property name="Address.PostalCode" type="StringType" column="PostalCode" />
		<property name="DateOfBirth" type="DateType" column="*" />
		<property name="Handicap" type="DecimalType" column="*" />
		<property name="PlayerNumber" type="StringType" column="*" />
		<property name="Gender" type="GenderType" column="*" />
	    </properties>
	</entity>
	<entity name="Participant" sqlentity="Participant">
	    <properties>
		<property name="ParticipantId" type="IdType" column="*" />
		<property name="Golfer" type="GolferData" />
		<property name="Golfer.GolferId" type="IdType" column="GolferId" />
 		<property name="Tournament" type="TournamentData" />
 		<property name="Tournament.TournamentId" type="IdType" column="TournamentId" />
		<property name="Team" type="TeamData" />
		<property name="Team.TeamId" type="IdType" column="TeamId" />
		<property name="ALaCarteItems" type="IList" concretetype="ArrayList" />
	    </properties>
	    <finders>
		<finder name="FindByTournamentId">
		    <properties>
			<property name="Tournament.TournamentId" />
		    </properties>
		</finder>
	    </finders>
	</entity>
	<entity name="Profile">
	    <properties>
		<property name="ProfileId" type="IdType" />
		<property name="UserName" type="StringType" />
		<property name="Password" type="StringType" />
		<property name="Golfer" type="GolferData" sqlname="" />
		<property name="Golfer.GolferId" type="IdType" sqlname="GolferId" sqltype="int" />
	    </properties>
	</entity>
	<entity name="Payment">
	    <properties>
		<property name="Payor" type="ProfileData" />
		<property name="Participants" type="IList" concretetype="ArrayList" />
		<property name="CreditCard" type="CreditCardData" />
	    </properties>
	</entity>
	<entity name="CreditCard">
	    <properties>
		<property name="Number" type="StringType" />
		<property name="ExpirationDate" type="DateType" />
		<property name="Name" type="StringType" />
		<property name="Address" type="AddressData" />
	    </properties>
	</entity>
	<entity name="Organization">
	    <properties>
		<property name="OrganizationId" type="IdType" />
		<property name="Name" type="StringType" />
	    </properties>
	</entity>
	<entity name="Organizer" sqlentity="Organizer">
	    <properties>
		<property name="OrganizerId" type="IdType" column="*" />
		<property name="Name" type="StringType" column="*" />
	    </properties>
	</entity>
	<entity name="WaitList">
	    <properties></properties>
	</entity>
	<entity name="Sponsor">
	    <properties>
		<property name="Name" type="StringType" />
		<property name="Logo" type="StringType" />
	    </properties>
	</entity>
	<entity name="Location">
	    <properties></properties>
	</entity>
	<entity name="Address">
	    <properties>
		<property name="Address1" type="StringType" />
		<property name="Address2" type="StringType" />
		<property name="City" type="StringType" />
		<property name="State" type="USStateCodeEnum" />
		<property name="Country" type="StringType" />
		<property name="PostalCode" type="StringType" />
	    </properties>
	</entity>
	<entity name="ALaCarteItem">
	    <properties>
		<property name="Description" type="StringType" />
		<property name="Price" type="CurrencyType" />
	    </properties>
	</entity>
	<entity name="Notification">
	    <properties></properties>
	</entity>
	<entity name="Pairing">
	    <properties></properties>
	</entity>
	<entity name="Flight">
	    <properties></properties>
	</entity>
	<entity name="Scorecard">
	    <properties></properties>
	</entity>
	<entity name="Prize">
	    <properties>
		<property name="Description" type="StringType" />
		<property name="Amount" type="CurrencyType" />
	    </properties>
	</entity>
	<entity name="Round">
	    <properties></properties>
	</entity>
    </entities>
    <!--
    
      Collections (extending CollectionBase)
      
      collection attributes:
	name - 
	type - type that is being wrapped
    
    -->
    <collections>
	<collection name="TeamCollection" type="TeamData" />
    </collections>
    <collections>
	<collection name="ALaCarteItemCollection" type="ALaCarteItemData" />
    </collections>
    <collections>
	<collection name="ParticipantCollection" type="ParticipantData" />
    </collections>
    <!-- 
    
      Enums
      
    -->
    <enums>
	<enum name="TournamentFormatEnum">
	    <value name="Scramble" code="S" />
	    <value name="Best Ball" code="B" />
	</enum>
	<enum name="TeamSizeEnum">
	    <value name="Individual" code="1" />
	    <value name="Two Person" code="2" />
	    <value name="Four Person" code="4" />
	</enum>
	<enum name="TeamStatusEnum">
	    <value name="New" code="N" />
	    <value name="Confirmed" code="C" />
	    <value name="Cancelled" code="X" />
	</enum>
	<enum name="USStateEnum">
	    <value name="Alabama" code="AL" />
	    <value name="Alaska" code="AK" />
	    <value name="Arizona" code="AZ" />
	    <value name="Arkansas" code="AR" />
	    <value name="California" code="CA" />
	    <value name="Colorado" code="CO" />
	    <value name="Connecticut" code="CT" />
	    <value name="Delaware" code="DE" />
	    <value name="District of Columbia" code="DC" />
	    <value name="Florida" code="FL" />
	    <value name="Georgia" code="GA" />
	    <value name="Hawaii" code="HI" />
	    <value name="Idaho" code="ID" />
	    <value name="Illinois" code="IL" />
	    <value name="Indiana" code="IN" />
	    <value name="Iowa" code="IA" />
	    <value name="Kansas" code="KS" />
	    <value name="Kentucky" code="KY" />
	    <value name="Louisiana" code="LA" />
	    <value name="Maine" code="ME" />
	    <value name="Maryland" code="MD" />
	    <value name="Massachusetts" code="MA" />
	    <value name="Michigan" code="MI" />
	    <value name="Minnesota" code="MN" />
	    <value name="Mississippi" code="MS" />
	    <value name="Missouri" code="MO" />
	    <value name="Montana" code="MT" />
	    <value name="Nebraska" code="NE" />
	    <value name="Nevada" code="NV" />
	    <value name="New Hampshire" code="NH" />
	    <value name="New Jersey" code="NJ" />
	    <value name="New Mexico" code="NM" />
	    <value name="New York" code="NY" />
	    <value name="North Carolina" code="NC" />
	    <value name="North Dakota" code="ND" />
	    <value name="Ohio" code="OH" />
	    <value name="Oklahoma" code="OK" />
	    <value name="Oregon" code="OR" />
	    <value name="Pennsylvania" code="PA" />
	    <value name="Rhode Island" code="RI" />
	    <value name="South Carolina" code="SC" />
	    <value name="South Dakota" code="SD" />
	    <value name="Tennessee" code="TN" />
	    <value name="Texas" code="TX" />
	    <value name="Utah" code="UT" />
	    <value name="Vermont" code="VT" />
	    <value name="Virginia" code="VA" />
	    <value name="Washington" code="WA" />
	    <value name="West Virginia" code="WV" />
	    <value name="Wisconsin" code="WI" />
	    <value name="Wyoming" code="WY" />
	</enum>
    </enums>
    <!-- 
    
      Types
      
    -->
    <types>
	<!-- .Net primitive types -->
	<type name="String" newinstanceformat="String.Empty" />
	<type name="DateTime" newinstanceformat="new DateTime()" />
	<type name="Int32" newinstanceformat="0" />
	<type name="Boolean" newinstanceformat="false" />
	<type name="Double" newinstanceformat="0" />
	<type name="Decimal" newinstanceformat="0" />
	<!-- .Net FCL types -->
	<type name="IList" namespace="System.Collections" />
	<type name="ArrayList" namespace="System.Collections" newinstanceformat="new ArrayList()" />
	<type name="Hashtable" namespace="System.Collections" newinstanceformat="new Hashtable()" />
	<!-- Spring2.Core.Types -->
	<type name="BooleanType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="BooleanType.GetInstance({2})" newinstanceformat="BooleanType.DEFAULT" nullinstanceformat="BooleanType.UNSET" />
	<type name="StringType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="StringType.Parse({2})" newinstanceformat="StringType.DEFAULT" nullinstanceformat="StringType.UNSET" />
	<type name="IdType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="new IdType({2})" newinstanceformat="IdType.DEFAULT" nullinstanceformat="IdType.UNSET" />
	<type name="DateType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="new DateType({2})" newinstanceformat="DateType.DEFAULT" nullinstanceformat="DateType.UNSET" />
	<type name="IntegerType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="new IntegerType({2})" newinstanceformat="IntegerType.DEFAULT" nullinstanceformat="IntegerType.UNSET" />
	<type name="DecimalType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="new DecimalType({2})" newinstanceformat="DecimalType.DEFAULT" nullinstanceformat="DecimalType.UNSET" />
	<type name="CurrencyType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="new CurrencyType({2})" newinstanceformat="CurrencyType.DEFAULT" nullinstanceformat="CurrencyType.UNSET" />
	<type name="QuantityType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="new QuantityType({2})" newinstanceformat="QuantityType.DEFAULT" nullinstanceformat="QuantityType.UNSET" />
	<type name="GenderType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="GenderType.GetInstance({2})" newinstanceformat="GenderType.DEFAULT" nullinstanceformat="GenderType.UNSET" />
	<type name="USStateCodeEnum" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="USStateCodeEnum.GetInstance({2})" newinstanceformat="USStateCodeEnum.DEFAULT" nullinstanceformat="USStateCodeEnum.UNSET" />
    </types>
    <sqltypes>
	<sqltype name="float" type="DecimalType" readermethodformat='{0}.GetDouble({0}.GetOrdinal("{1}"))' declarationformat="{0}({2})" />
	<sqltype name="datetime" sqldbtype="DateTime" type="DateType" readermethodformat='{0}.GetDateTime({0}.GetOrdinal("{1}"))' />
	<sqltype name="bit" type="IntegerType" readermethodformat='{0}.GetInt32({0}.GetOrdinal("{1}"))' />
	<sqltype name="smallint" sqldbtype="SmallInt" type="IntegerType" readermethodformat='{0}.GetInt32({0}.GetOrdinal("{1}"))' />
	<sqltype name="tinyint" sqldbtype="TinyInt" type="IntegerType" readermethodformat='{0}.GetInt32({0}.GetOrdinal("{1}"))' />
	<sqltype name="smallmoney" sqldbtype="SmallMoney" type="CurrencyType" readermethodformat='{0}.GetDecimal({0}.GetOrdinal("{1}"))' />
	<sqltype name="money" type="CurrencyType" readermethodformat='{0}.GetDecimal({0}.GetOrdinal("{1}"))' />
	<sqltype name="image" length="50" type="StringType" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' />
	<sqltype name="text" length="50" type="StringType" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' />
	<sqltype name="smalldatetime" sqldbtype="SmallDateTime" type="DateType" readermethodformat='{0}.GetDateTime({0}.GetOrdinal("{1}"))' />
	<sqltype name="char" length="1" type="StringType" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' declarationformat="{0}({1})" />
	<sqltype name="varchar" sqldbtype="VarChar" length="50" type="StringType" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' declarationformat="{0}({1})" />
	<sqltype name="int" scale="0" precision="10" type="IntegerType" readermethodformat='{0}.GetInt32({0}.GetOrdinal("{1}"))' />
	<sqltype name="numeric" sqldbtype="Decimal" type="DecimalType" readermethodformat='{0}.GetDecimal({0}.GetOrdinal("{1}"))' declarationformat="{0}({2}, {3})" />
	<sqltype name="binary" type="byte[]" declarationformat="{0}({1})" />
	<sqltype name="bigint" sqldbtype="BigInt" type="Int64" readermethodformat='{0}.GetInt64({0}.GetOrdinal("{1}"))' />
	<sqltype name="decimal" type="Decimal" readermethodformat='{0}.GetDecimal({0}.GetOrdinal("{1}"))' declarationformat="{0}({2}, {3})" />
	<sqltype name="nchar" sqldbtype="NChar" type="String" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' declarationformat="{0}({1})" />
	<sqltype name="ntext" sqldbtype="NText" type="String" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' declarationformat="{0}({1})" />
	<sqltype name="nvarchar" sqldbtype="NVarChar" type="String" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' declarationformat="{0}({1})" />
	<sqltype name="real" type="Single" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' />
	<sqltype name="varbinary" sqldbtype="VarBinary" type="byte[]" declarationformat="{0}({1})" />
	<sqltype name="uniqueidentifier" sqldbtype="UniqueIdentifier" type="Guid" />
	<sqltype name="timestamp" type="DateTime" readermethodformat='{0}.GetDateTime({0}.GetOrdinal("{1}"))' />
    </sqltypes>
    <!--
	sqlentity attributes:
	    name -
	    view -
	  
	column attributes:
	    name -
	    sqltype -
	    length -
	    scale -
	    precision -
	    identity -
	    increment -
	    seed -
	    rowguidcol -
	    formula -
	    default -
	    foreigncolumn - needed for when used in a foreign key constraint
	    sortdirection - needed for index columns (ASC/DESC/String.Empty)
	    
	constraint attributes:
	    name - 
	    contrainttype -
	    clusterd -
	    foreignentity -
	    
	index attributes:
	    name -
	    unique -
	    clustered -
	    
    -->
    <sqlentities>
	<sqlentity name="Organizer" view="vwOrganizer">
	    <columns>
		<column name="OrganizerId" sqltype="int" identity="True" />
		<column name="Name" sqltype="varchar" length="50" required="True" />
	    </columns>
	    <constraints>
		<constraint name="PK_Organizer" type="PRIMARY KEY">
		    <column name="OrganizerId" />
		</constraint>
	    </constraints>
	</sqlentity>
	<sqlentity name="Tournament" view="vwTournament">
	    <columns>
		<column name="TournamentId" sqltype="int" identity="True" />
		<column name="Name" sqltype="varchar" length="50" required="True" />
		<column name="Description" sqltype="varchar" length="500" />
		<column name="NumberOfTeams" sqltype="int" />
		<column name="TeamSize" sqltype="char" length="1" />
		<column name="Format" sqltype="char" length="1" />
		<column name="RegistrationBeginDate" sqltype="datetime" />
		<column name="RegistrationEndDate" sqltype="datetime" />
		<column name="RegistrationFee" sqltype="money" />
		<column name="OrganizerId" sqltype="int" />
		<column name="CancellationCutoffDate" sqltype="datetime" />
		<column name="RegistrationFeeDescription" sqltype="varchar" length="250" />
		<column name="DatesText" sqltype="varchar" length="50" />
		<column name="PrizesText" sqltype="varchar" length="1000" />
		<column name="SponsorsText" sqltype="varchar" length="1000" />
		<column name="LocationsText" sqltype="varchar" length="250" />
		<column name="MaximumHandicap" sqltype="int" />
		<column name="RegisteredParticipants" sqltype="int" viewcolumn="True" />
	    </columns>
	    <constraints>
		<constraint name="PK_Tournament" type="PRIMARY KEY" clustered="False">
		    <column name="TournamentId" />
		</constraint>
		<constraint name="FK_Tournament_Organizer" type="FOREIGN KEY" foreignentity="Organizer">
		    <column name="OrganizerId" foreigncolumn="OrganizerId" />
		</constraint>
	    </constraints>
	</sqlentity>
	<sqlentity name="Participant" view="vwParticipant">
	    <columns>
		<column name="ParticipantId" sqltype="int" identity="True" />
		<column name="TeamId" sqltype="int" />
		<column name="TournamentId" sqltype="int" />
		<column name="GolferId" sqltype="int" />
	    </columns>
	    <constraints>
		<constraint name="PK_Participant" type="PRIMARY KEY" clustered="False">
		    <column name="ParticipantId" />
		</constraint>
		<constraint name="FK_Participant_Tournament" type="FOREIGN KEY" foreignentity="Tournament">
		    <column name="TournamentId" foreigncolumn="TournamentId" />
		</constraint>
		<constraint name="FK_Participant_Golfer" type="FOREIGN KEY" foreignentity="Golfer">
		    <column name="GolferId" foreigncolumn="GolferId" />
		</constraint>
	    </constraints>
	</sqlentity>
	<sqlentity name="Golfer" view="vwGolfer">
	    <columns>
		<column name="GolferId" sqltype="int" identity="True" />
		<column name="FirstName" sqltype="varchar" length="50" />
		<column name="MiddleInitial" sqltype="char" length="1" />
		<column name="LastName" sqltype="varchar" length="50" />
		<column name="Phone" sqltype="varchar" length="50" />
		<column name="Email" sqltype="varchar" length="50" />
		<column name="Address1" sqltype="varchar" length="50" />
		<column name="Address2" sqltype="varchar" length="50" />
		<column name="City" sqltype="varchar" length="50" />
		<column name="State" sqltype="char" length="2" />
		<column name="Country" sqltype="varchar" length="50" />
		<column name="PostalCode" sqltype="varchar" length="10" />
		<column name="DateOfBirth" sqltype="datetime" />
		<column name="Handicap" sqltype="decimal" precision="3" scale="1" />
		<column name="PlayerNumber" sqltype="varchar" length="10" />
		<column name="Gender" sqltype="varchar" length="1" />
	    </columns>
	    <constraints>
		<constraint name="PK_Golfer" type="PRIMARY KEY" clustered="False">
		    <column name="GolferId" />
		</constraint>
	    </constraints>
	</sqlentity>
	<sqlentity name="Team" view="vwTeam">
	    <columns>
		<column name="TeamId" sqltype="int" identity="True" />
		<column name="RegistrationKey" sqltype="varchar" length="6" />
		<column name="Status" sqltype="char" length="1" />
		<column name="TournamentId" sqltype="int" />
	    </columns>
	    <constraints>
		<constraint name="PK_Team" type="PRIMARY KEY" clustered="False">
		    <column name="TeamId" />
		</constraint>
		<constraint name="FK_Team_Tournament" type="FOREIGN KEY" foreignentity="Tournament">
		    <column name="TournamentId" foreigncolumn="TournamentId" />
		</constraint>
	    </constraints>
	</sqlentity>
    </sqlentities>
</DataTierGenerator>
