<?xml version="1.0" ?>
<DataTierGenerator>
  <generator class="Spring2.DataTierGenerator.Generator.GeneratorTaskManager,Spring2.DataTierGenerator">
    <tasks>
      <task name="dataobject" element="entity" template="Template\DataObject.vm" directory="DataObject" filenameformat="{0}Data.cs" />
      <task name="dao" element="entity" template="Template\DAO.vm" directory="DAO" filenameformat="{0}DAO.cs" />
      <task name="enum" element="enum" template="Template\enum.vm" directory="Types" filenameformat="{0}.cs" />
      <task name="enum" element="enum" template="Template\EnumTest.vm" directory="Test" filenameformat="{0}Test.cs" />
      <task name="collection" element="collection" template="Template\collection.vm" directory="DataObject" filenameformat="{0}.cs" />
      <task name="table" element="sqlentity" template="Template\sql_table.vm" directory="sql\table" filenameformat="{0}.table.sql" />
      <task name="view" element="sqlentity" template="Template\sql_view.vm" directory="sql\view" filenameformat="vw{0}.view.sql" />
      <task name="delete procs" element="sqlentity" template="Template\sql_delete.vm" directory="sql\proc" filenameformat="sp{0}_Delete.proc.sql" />
      <task name="insert procs" element="sqlentity" template="Template\sql_insert.vm" directory="sql\proc" filenameformat="sp{0}_Insert.proc.sql" />
      <task name="update procs" element="sqlentity" template="Template\sql_update.vm" directory="sql\proc" filenameformat="sp{0}_Update.proc.sql" />
      <task name="enum table data scripts" element="enum" template="Template\enum_sql_data.vm" directory="sql\data" filenameformat="{0}.data.sql">
	<includes>
	  <include name="GolferStatusEnum" />
	</includes>
	<parameters>
	  <parameter name="table" value="GolferStatus" />
	  <parameter name="codeColumn" value="Code" />
	  <parameter name="nameColumn" value="Name" />
	</parameters>
      </task>
      <task name="enum table data scripts" element="enum" template="Template\enum_sql_data.vm" directory="sql\data" filenameformat="{0}.data.sql">
	<includes>
	  <include name="FunctionEnum" />
	</includes>
	<parameters>
	  <parameter name="table" value="Function" />
	  <parameter name="codeColumn" value="FunctionID" />
	  <parameter name="nameColumn" value="FunctionName" />
	  <parameter name="descriptionColumn" value="Description" />
	</parameters>
      </task>
    </tasks>
    <tools>
      <tool name="sql" class="Spring2.DataTierGenerator.Tool.MSSqlServerTool,Spring2.DataTierGenerator.Tool" />
    </tools>
  </generator>
  <config>
    <setting name="RootDirectory" value=".\SanityTest\" />
    <setting name="DaoClassDirectory" value="DAO" />
    <setting name="DoClassDirectory" value="DataObject" />
    <setting name="CollectionClassDirectory" value="DataObject" />
    <setting name="TypesClassDirectory" value="Types" />
    <setting name="GenerateDataObjectClasses" value="True" />
    <setting name="RootNameSpace" value="Golf.Tournament" />
    <setting name="DataObjectBaseClass" value="Spring2.Core.DataObject.DataObject" />
    <setting name="DAOBaseClass" value="Spring2.Core.DAO.EntityDAO" />
  </config>
  <entities>
    <entity name="TournamentFee" sqlentity="TournamentFee">
      <properties>
	<property name="TournamentFeeId" type="IdType" column="*" />
	<property name="TournamentId" type="IdType" column="*" />
	<property name="Key" type="StringType" column="*" />
	<property name="Fee" type="CurrencyType" column="*" />
      </properties>
      <finders>
	<finder name="FindByTournamentId">
	  <properties>
	    <property name="TournamentId" />
	  </properties>
	</finder>
      </finders>
    </entity>
    <entity name="Tournament" sqlentity="Tournament">
      <properties>
	<property name="TournamentId" type="IdType" column="*" />
	<property name="Name" type="StringType" column="*" />
	<property name="Description" type="StringType" column="*" />
	<property name="NumberOfTeams" type="IntegerType" column="*" />
	<property name="TeamSize" type="TeamSizeEnum" column="*" />
	<property name="Format" type="TournamentFormatEnum" column="*" />
	<property name="RegistrationBeginDate" type="DateType" column="*" />
	<property name="RegistrationEndDate" type="DateType" column="*" />
	<property name="CancellationCutoffDate" type="DateType" column="*" />
	<property name="RegistrationFee" type="CurrencyType" column="*" />
	<property name="RegistrationFeeDescription" type="StringType" column="*" />
	<property name="DatesText" type="StringType" column="*" />
	<property name="PrizesText" type="StringType" column="*" />
	<property name="SponsorsText" type="StringType" column="*" />
	<property name="LocationsText" type="StringType" column="*" />
	<property name="Organizer.OrganizerId" type="IdType" column="OrganizerId" />
	<property name="Organizer" type="OrganizerData" />
	<property name="RegisteredParticipants" type="IntegerType" column="*" />
	<property name="MaximumHandicap" type="IntegerType" column="*" />
	<property name="Teams" type="TeamCollection">
	    List of TeamData objects.
	</property>
	<property name="Participants" type="ParticipantCollection">
	    List of ParticipantData objects.
	</property>
	<property name="Host" type="StringType" column="*">
	    This is the string that will be parsed from the request to determine which tournament is being asked for.
	</property>
	<property name="ShowPercentFull" type="BooleanType" column="*" />
	<property name="ShowParticipants" type="BooleanType" column="*" />
	<property name="Fees" type="TournamentFeeCollection" />
      </properties>
      <finders>
	<finder name="FindByHost" unique="True">
	  <properties>
	    <property name="Host" />
	  </properties>
	</finder>
      </finders>
    </entity>
    <entity name="Team" sqlentity="Team">
      <properties>
	<property name="TeamId" type="IdType" column="*" />
	<property name="RegistrationKey" type="StringType" column="*" />
	<property name="Status" type="TeamStatusEnum" column="*" />
	<property name="TournamentId" type="IdType" column="*" />
	<property name="Participants" type="ParticipantCollection">
	    List of ParticipantData objects.
	</property>
      </properties>
      <finders>
	<finder name="FindByTournamentId">
	  <properties>
	    <property name="TournamentId" />
	  </properties>
	</finder>
      </finders>
    </entity>
    <entity name="Golfer" sqlentity="Golfer">
      <properties>
	<property name="GolferId" type="IdType" column="*" />
	<property name="FirstName" type="StringType" column="*" />
	<property name="MiddleInitial" type="StringType" column="*" />
	<property name="LastName" type="StringType" column="*" />
	<property name="Phone" type="StringType" column="*" />
	<property name="Email" type="StringType" column="*" />
	<property name="Address" type="AddressData" />
	<property name="Address.Address1" type="StringType" column="Address1" />
	<property name="Address.Address2" type="StringType" column="Address2" />
	<property name="Address.City" type="StringType" column="City" />
	<property name="Address.State" type="USStateCodeEnum" column="State" />
	<property name="Address.Country" type="StringType" column="Country" />
	<property name="Address.PostalCode" type="StringType" column="PostalCode" />
	<property name="DateOfBirth" type="DateType" column="*" />
	<property name="Handicap" type="DecimalType" column="*" />
	<property name="CourseNumber" type="StringType" column="*" />
	<property name="PlayerNumber" type="StringType" column="*" />
	<property name="Gender" type="GenderType" column="*" />
	<property name="GolferStatus" type="GolferStatusEnum" column="*" />
      </properties>
    </entity>
    <entity name="Participant" sqlentity="Participant">
      <properties>
	<property name="ParticipantId" type="IdType" column="*" />
	<property name="Golfer" type="GolferData" />
	<property name="Golfer.GolferId" type="IdType" column="GolferId" />
	<property name="Tournament" type="TournamentData" />
	<property name="Tournament.TournamentId" type="IdType" column="TournamentId" />
	<property name="Team" type="TeamData" />
	<property name="Team.TeamId" type="IdType" column="TeamId" />
	<property name="ALaCarteItems" type="IList" concretetype="ArrayList" />
	<property name="Payment" type="PaymentData" />
	<property name="Payment.PaymentId" type="IdType" column="PaymentId" />
	<property name="Payment.ConfirmationCode" type="StringType" column="ConfirmationCode" />
	<property name="Payment.PaymentDate" type="DateType" column="PaymentDate" />
	<property name="IsValid" type="BooleanType" column="*" />
	<property name="RegistrationFee" type="CurrencyType" column="*" />
      </properties>
      <finders>
	<finder name="FindByTournamentId">
	  <properties>
	    <property name="Tournament.TournamentId" />
	  </properties>
	</finder>
	<finder name="FindByTeamId">
	  <properties>
	    <property name="Tournament.TournamentId" />
	    <property name="Team.TeamId" />
	  </properties>
	</finder>
	<finder name="FindByConfirmationCode">
	  <properties>
	    <property name="Payment.ConfirmationCode" />
	  </properties>
	</finder>
      </finders>
    </entity>
    <entity name="Profile">
      <properties>
	<property name="ProfileId" type="IdType" />
	<property name="UserName" type="StringType" />
	<property name="Password" type="StringType" />
	<property name="Golfer" type="GolferData" />
	<property name="Golfer.GolferId" type="IdType" />
      </properties>
    </entity>
    <entity name="Payment" sqlentity="Payment">
      <properties>
	<property name="PaymentId" type="IdType" column="*" />
	<property name="Tournament" type="TournamentData" />
	<property name="Tournament.TournamentId" type="IdType" column="TournamentId" />
	<property name="AuthorizationNumber" type="StringType" column="*" />
	<property name="ReferenceNumber" type="StringType" column="*" />
	<property name="TransactionNumber" type="StringType" column="*" />
	<property name="Amount" type="CurrencyType" column="*" />
	<property name="ProcessDate" type="DateType" column="*" />
	<property name="PaymentStatus" type="PaymentStatusEnum" column="*" />
	<property name="Golfer" type="GolferData" />
	<property name="Golfer.GolferId" type="IdType" column="GolferId" />
	<property name="CreditCard" type="CreditCardData" />
	<property name="CreditCard.Number" type="StringType" column="CreditCardNumber" />
	<property name="CreditCard.ExpirationDate" type="DateType" column="ExpirationDate" converttosqltypeformat='{1}.ToString("MMyy")' convertfromsqltypeformat="new DateType(Spring2.Core.Util.DateUtil.ToDateTimeFromCreditCardDate({2}))" />
	<property name="CreditCard.Name" type="StringType" column="CardholderName" />
	<property name="CreditCard.Address.Address1" type="StringType" column="Address1" />
	<property name="CreditCard.Address.Address2" type="StringType" column="Address2" />
	<property name="CreditCard.Address.City" type="StringType" column="City" />
	<property name="CreditCard.Address.State" type="USStateCodeEnum" column="State" />
	<property name="CreditCard.Address.Country" type="StringType" column="Country" />
	<property name="CreditCard.Address.PostalCode" type="StringType" column="PostalCode" />
	<property name="Participants" type="IList" concretetype="ArrayList" />
	<property name="ConfirmationCode" type="StringType" column="*" />
	<property name="PaymentDate" type="DateType" column="*" />
      </properties>
    </entity>
    <entity name="CreditCard">
      <properties>
	<property name="Number" type="StringType" />
	<property name="ExpirationDate" type="DateType" />
	<property name="Name" type="StringType" />
	<property name="Address" type="AddressData" />
      </properties>
    </entity>
    <entity name="Organization">
      <properties>
	<property name="OrganizationId" type="IdType" />
	<property name="Name" type="StringType" />
      </properties>
    </entity>
    <entity name="Organizer" sqlentity="Organizer">
      <properties>
	<property name="OrganizerId" type="IdType" column="*" />
	<property name="Name" type="StringType" column="*" />
	<property name="Address" type="AddressData" />
	<property name="Address.Address1" type="StringType" column="Address1" />
	<property name="Address.Address2" type="StringType" column="Address2" />
	<property name="Address.City" type="StringType" column="City" />
	<property name="Address.State" type="USStateCodeEnum" column="State" />
	<property name="Address.Country" type="StringType" column="Country" />
	<property name="Address.PostalCode" type="StringType" column="PostalCode" />
	<property name="OrganizerContact" type="ContactData" />
	<property name="OrganizerContact.Name" type="StringType" column="OrganizerContactName" />
	<property name="OrganizerContact.Phone" type="StringType" column="OrganizerContactPhone" />
	<property name="OrganizerContact.Email" type="StringType" column="OrganizerContactEmail" />
	<property name="TechnicalContact" type="ContactData" />
	<property name="TechnicalContact.Name" type="StringType" column="TechnicalContactName" />
	<property name="TechnicalContact.Phone" type="StringType" column="TechnicalContactPhone" />
	<property name="TechnicalContact.Email" type="StringType" column="TechnicalContactEmail" />
      </properties>
    </entity>
    <entity name="WaitList"></entity>
    <entity name="Sponsor">
      <properties>
	<property name="Name" type="StringType" />
	<property name="Logo" type="StringType" />
      </properties>
    </entity>
    <entity name="Location"></entity>
    <entity name="Address">
      <properties>
	<property name="Address1" type="StringType" />
	<property name="Address2" type="StringType" />
	<property name="City" type="StringType" />
	<property name="State" type="USStateCodeEnum" />
	<property name="Country" type="StringType" />
	<property name="PostalCode" type="StringType" />
      </properties>
    </entity>
    <entity name="ALaCarteItem">
      <properties>
	<property name="Description" type="StringType" />
	<property name="Price" type="CurrencyType" />
      </properties>
    </entity>
    <entity name="Notification"></entity>
    <entity name="Pairing"></entity>
    <entity name="Flight"></entity>
    <entity name="Scorecard"></entity>
    <entity name="Prize">
      <properties>
	<property name="Description" type="StringType" />
	<property name="Amount" type="CurrencyType" />
      </properties>
    </entity>
    <entity name="Round"></entity>
    <entity name="Contact">
      <properties>
	<property name="Name" type="StringType" />
	<property name="Phone" type="StringType" />
	<property name="Email" type="StringType" />
      </properties>
    </entity>
  </entities>
  <!--
    
      Collections (extending CollectionBase)
      
      collection attributes:
	name - 
	type - type that is being wrapped
    
    -->
  <collections>
    <collection name="TeamCollection" type="TeamData" />
    <collection name="ALaCarteItemCollection" type="ALaCarteItemData" />
    <collection name="ParticipantCollection" type="ParticipantData" />
    <collection name="TournamentFeeCollection" type="TournamentFeeData" />
  </collections>
  <!-- 
    
      Enums
      
    -->
  <enums>
    <enum name="GolferStatusEnum">
      <value name="Amatuer" code="A" />
      <value name="Pro" code="P" />
    </enum>
    <enum name="ExpMonthEnum">
      <value name="Jan" code="01" />
      <value name="Feb" code="02" />
      <value name="Mar" code="03" />
      <value name="Apr" code="04" />
      <value name="May" code="05" />
      <value name="Jun" code="06" />
      <value name="Jul" code="07" />
      <value name="Aug" code="08" />
      <value name="Sep" code="09" />
      <value name="Oct" code="10" />
      <value name="Nov" code="11" />
      <value name="Dec" code="12" />
    </enum>
    <enum name="ExpYearEnum">
      <value name="YEAR_2002" code="2002" />
      <value name="YEAR_2003" code="2003" />
      <value name="YEAR_2004" code="2004" />
      <value name="YEAR_2005" code="2005" />
      <value name="YEAR_2006" code="2006" />
      <value name="YEAR_2007" code="2007" />
      <value name="YEAR_2008" code="2008" />
    </enum>
    <enum name="PaymentStatusEnum">
      <value name="PreAuth" code="PreAuth" />
      <value name="PostAuth" code="PostAuth" />
      <value name="Sale" code="Sale" />
      <value name="Settled" code="Settled" />
    </enum>
    <enum name="CreditCardTypeEnum">
      <value name="American Express" code="AMEX" />
      <value name="Carte Blanche" code="CBLN" />
      <value name="Diners Club" code="DCCB" />
      <value name="Discover" code="DISC" />
      <value name="Enroute" code="ENRT" />
      <value name="JAL" code="JAL" />
      <value name="JCB" code="JCB" />
      <value name="MasterCard" code="MC" />
      <value name="Visa" code="VISA" />
    </enum>
    <enum name="TournamentFormatEnum">
      <value name="Individual" code="I" />
      <value name="Scramble" code="S" />
      <value name="Best Ball" code="B" />
    </enum>
    <enum name="TeamSizeEnum">
      <value name="Individual" code="1" />
      <value name="Two Person" code="2" />
      <value name="Four Person" code="4" />
    </enum>
    <enum name="TeamStatusEnum">
      <value name="New" code="N" />
      <value name="Confirmed" code="C" />
      <value name="Cancelled" code="X" />
    </enum>
    <enum name="USStateEnum">
      <value name="Alabama" code="AL" />
      <value name="Alaska" code="AK" />
      <value name="Arizona" code="AZ" />
      <value name="Arkansas" code="AR" />
      <value name="California" code="CA" />
      <value name="Colorado" code="CO" />
      <value name="Connecticut" code="CT" />
      <value name="Delaware" code="DE" />
      <value name="District of Columbia" code="DC" />
      <value name="Florida" code="FL" />
      <value name="Georgia" code="GA" />
      <value name="Hawaii" code="HI" />
      <value name="Idaho" code="ID" />
      <value name="Illinois" code="IL" />
      <value name="Indiana" code="IN" />
      <value name="Iowa" code="IA" />
      <value name="Kansas" code="KS" />
      <value name="Kentucky" code="KY" />
      <value name="Louisiana" code="LA" />
      <value name="Maine" code="ME" />
      <value name="Maryland" code="MD" />
      <value name="Massachusetts" code="MA" />
      <value name="Michigan" code="MI" />
      <value name="Minnesota" code="MN" />
      <value name="Mississippi" code="MS" />
      <value name="Missouri" code="MO" />
      <value name="Montana" code="MT" />
      <value name="Nebraska" code="NE" />
      <value name="Nevada" code="NV" />
      <value name="New Hampshire" code="NH" />
      <value name="New Jersey" code="NJ" />
      <value name="New Mexico" code="NM" />
      <value name="New York" code="NY" />
      <value name="North Carolina" code="NC" />
      <value name="North Dakota" code="ND" />
      <value name="Ohio" code="OH" />
      <value name="Oklahoma" code="OK" />
      <value name="Oregon" code="OR" />
      <value name="Pennsylvania" code="PA" />
      <value name="Rhode Island" code="RI" />
      <value name="South Carolina" code="SC" />
      <value name="South Dakota" code="SD" />
      <value name="Tennessee" code="TN" />
      <value name="Texas" code="TX" />
      <value name="Utah" code="UT" />
      <value name="Vermont" code="VT" />
      <value name="Virginia" code="VA" />
      <value name="Washington" code="WA" />
      <value name="West Virginia" code="WV" />
      <value name="Wisconsin" code="WI" />
      <value name="Wyoming" code="WY" />
    </enum>
    <enum name="FunctionEnum" integerbased="true">
      <value name="Order" code="1">Place an Order</value>
      <value name="Vendor Monitor Orders" code="2">Monitor/Acknowledge New Vendor Orders</value>
      <value name="Vendor Edit" code="3">Edit Vendor Information</value>
      <value name="Vendor View Invoices" code="4">View a vendor's invoices</value>
    </enum>
  </enums>
  <!-- 
    
      Types
      
    -->
  <types>
    <!-- .Net primitive types -->
    <type name="String" newinstanceformat="String.Empty" />
    <type name="DateTime" newinstanceformat="new DateTime()" />
    <type name="Int32" newinstanceformat="0" />
    <type name="Boolean" newinstanceformat="false" />
    <type name="Double" newinstanceformat="0" />
    <type name="Decimal" newinstanceformat="0" />
    <!-- .Net FCL types -->
    <type name="IList" namespace="System.Collections" />
    <type name="ArrayList" namespace="System.Collections" newinstanceformat="new ArrayList()" />
    <type name="Hashtable" namespace="System.Collections" newinstanceformat="new Hashtable()" />
    <!-- Spring2.Core.Types -->
    <type name="BooleanType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="BooleanType.GetInstance({2})" newinstanceformat="BooleanType.DEFAULT" nullinstanceformat="BooleanType.UNSET" />
    <type name="StringType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="StringType.Parse({2})" newinstanceformat="StringType.DEFAULT" nullinstanceformat="StringType.UNSET" />
    <type name="IdType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="new IdType({2})" newinstanceformat="IdType.DEFAULT" nullinstanceformat="IdType.UNSET" />
    <type name="DateType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="new DateType({2})" newinstanceformat="DateType.DEFAULT" nullinstanceformat="DateType.UNSET" />
    <type name="IntegerType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="new IntegerType({2})" newinstanceformat="IntegerType.DEFAULT" nullinstanceformat="IntegerType.UNSET" />
    <type name="DecimalType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="new DecimalType({2})" newinstanceformat="DecimalType.DEFAULT" nullinstanceformat="DecimalType.UNSET" />
    <type name="CurrencyType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="new CurrencyType({2})" newinstanceformat="CurrencyType.DEFAULT" nullinstanceformat="CurrencyType.UNSET" />
    <type name="QuantityType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="new QuantityType({2})" newinstanceformat="QuantityType.DEFAULT" nullinstanceformat="QuantityType.UNSET" />
    <type name="GenderType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="GenderType.GetInstance({2})" newinstanceformat="GenderType.DEFAULT" nullinstanceformat="GenderType.UNSET" />
    <type name="USStateCodeEnum" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.DBValue" convertfromsqltypeformat="USStateCodeEnum.GetInstance({2})" newinstanceformat="USStateCodeEnum.DEFAULT" nullinstanceformat="USStateCodeEnum.UNSET" />
  </types>
  <sqltypes>
    <sqltype name="float" type="DecimalType" readermethodformat='{0}.GetDouble({0}.GetOrdinal("{1}"))' declarationformat="{0}({2})" />
    <sqltype name="datetime" sqldbtype="DateTime" type="DateType" readermethodformat='{0}.GetDateTime({0}.GetOrdinal("{1}"))' />
    <sqltype name="bit" type="IntegerType" readermethodformat='{0}.GetInt32({0}.GetOrdinal("{1}"))' />
    <sqltype name="smallint" sqldbtype="SmallInt" type="IntegerType" readermethodformat='{0}.GetInt32({0}.GetOrdinal("{1}"))' />
    <sqltype name="tinyint" sqldbtype="TinyInt" type="IntegerType" readermethodformat='{0}.GetInt32({0}.GetOrdinal("{1}"))' />
    <sqltype name="smallmoney" sqldbtype="SmallMoney" type="CurrencyType" readermethodformat='{0}.GetDecimal({0}.GetOrdinal("{1}"))' />
    <sqltype name="money" type="CurrencyType" readermethodformat='{0}.GetDecimal({0}.GetOrdinal("{1}"))' />
    <sqltype name="image" length="50" type="StringType" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' />
    <sqltype name="text" length="50" type="StringType" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' />
    <sqltype name="smalldatetime" sqldbtype="SmallDateTime" type="DateType" readermethodformat='{0}.GetDateTime({0}.GetOrdinal("{1}"))' />
    <sqltype name="char" length="1" type="StringType" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' declarationformat="{0}({1})" />
    <sqltype name="varchar" sqldbtype="VarChar" length="50" type="StringType" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' declarationformat="{0}({1})" />
    <sqltype name="int" scale="0" precision="10" type="IntegerType" readermethodformat='{0}.GetInt32({0}.GetOrdinal("{1}"))' />
    <sqltype name="numeric" sqldbtype="Decimal" type="DecimalType" readermethodformat='{0}.GetDecimal({0}.GetOrdinal("{1}"))' declarationformat="{0}({2}, {3})" />
    <sqltype name="binary" type="byte[]" declarationformat="{0}({1})" />
    <sqltype name="bigint" sqldbtype="BigInt" type="Int64" readermethodformat='{0}.GetInt64({0}.GetOrdinal("{1}"))' />
    <sqltype name="decimal" type="Decimal" readermethodformat='{0}.GetDecimal({0}.GetOrdinal("{1}"))' declarationformat="{0}({2}, {3})" />
    <sqltype name="nchar" sqldbtype="NChar" type="String" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' declarationformat="{0}({1})" />
    <sqltype name="ntext" sqldbtype="NText" type="String" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' declarationformat="{0}({1})" />
    <sqltype name="nvarchar" sqldbtype="NVarChar" type="String" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' declarationformat="{0}({1})" />
    <sqltype name="real" type="Single" readermethodformat='{0}.GetString({0}.GetOrdinal("{1}"))' />
    <sqltype name="varbinary" sqldbtype="VarBinary" type="byte[]" declarationformat="{0}({1})" />
    <sqltype name="uniqueidentifier" sqldbtype="UniqueIdentifier" type="Guid" />
    <sqltype name="timestamp" type="DateTime" readermethodformat='{0}.GetDateTime({0}.GetOrdinal("{1}"))' />
  </sqltypes>
  <!--
	sqlentity attributes:
	    name -
	    view -
	  
	column attributes:
	    name -
	    sqltype -
	    length -
	    scale -
	    precision -
	    identity -
	    increment -
	    seed -
	    rowguidcol -
	    formula -
	    default -
	    foreigncolumn - needed for when used in a foreign key constraint
	    sortdirection - needed for index columns (ASC/DESC/String.Empty)
	    
	constraint attributes:
	    name - 
	    contrainttype -
	    clusterd -
	    foreignentity -
	    
	index attributes:
	    name -
	    unique -
	    clustered -
	    
    -->
  <databases server="olympus" database="crandall_golf" user="sa" password="1qaz2wsx" scriptsinglefile="False" generateonlyprimarydeletestoredproc="True" generateviewscript="True" generatetablescript="True" useview="True" scriptdropstatement="True" generateprocsforforeignkeys="False" generateinsertstoredprocscript="True" generateupdatestoredprocscript="True" generatedeletestoredprocscript="True" generateselectstoredprocscript="False" allowupdateofprimarykey="False" commandtimeout="15">
    <database name="database" key="ConnectionString">
      <sqlentities>
	<sqlentity name="Organizer" view="vwOrganizer">
	  <columns>
	    <column name="OrganizerId" sqltype="int" identity="True" />
	    <column name="Name" sqltype="varchar" length="50" required="True" />
	    <column name="Address1" sqltype="varchar" length="50" />
	    <column name="Address2" sqltype="varchar" length="50" />
	    <column name="City" sqltype="varchar" length="50" />
	    <column name="State" sqltype="char" length="2" />
	    <column name="Country" sqltype="varchar" length="50" />
	    <column name="PostalCode" sqltype="varchar" length="10" />
	    <column name="OrganizerContactName" sqltype="varchar" length="50" />
	    <column name="OrganizerContactPhone" sqltype="varchar" length="50" />
	    <column name="OrganizerContactEmail" sqltype="varchar" length="100" />
	    <column name="TechnicalContactName" sqltype="varchar" length="50" />
	    <column name="TechnicalContactPhone" sqltype="varchar" length="50" />
	    <column name="TechnicalContactEmail" sqltype="varchar" length="100" />
	  </columns>
	  <constraints>
	    <constraint name="PK_Organizer" type="PRIMARY KEY">
	      <column name="OrganizerId" />
	    </constraint>
	  </constraints>
	</sqlentity>
	<sqlentity name="Tournament" view="vwTournament" generateviewscript="False">
	  <columns>
	    <column name="TournamentId" sqltype="int" identity="True" />
	    <column name="Name" sqltype="varchar" length="50" required="True" />
	    <column name="Description" sqltype="varchar" length="500" />
	    <column name="NumberOfTeams" sqltype="int" />
	    <column name="TeamSize" sqltype="char" length="1" />
	    <column name="Format" sqltype="char" length="1" />
	    <column name="RegistrationBeginDate" sqltype="datetime" />
	    <column name="RegistrationEndDate" sqltype="datetime" />
	    <column name="RegistrationFee" sqltype="money" />
	    <column name="OrganizerId" sqltype="int" />
	    <column name="CancellationCutoffDate" sqltype="datetime" />
	    <column name="RegistrationFeeDescription" sqltype="varchar" length="250" />
	    <column name="DatesText" sqltype="varchar" length="50" />
	    <column name="PrizesText" sqltype="varchar" length="1000" />
	    <column name="SponsorsText" sqltype="varchar" length="1000" />
	    <column name="LocationsText" sqltype="varchar" length="250" />
	    <column name="MaximumHandicap" sqltype="int" />
	    <column name="RegisteredParticipants" sqltype="int" viewcolumn="True" />
	    <column name="Host" sqltype="varchar" length="30" />
	    <column name="ShowPercentFull" sqltype="char" length="1" />
	    <column name="ShowParticipants" sqltype="char" length="1" />
	  </columns>
	  <constraints>
	    <constraint name="PK_Tournament" type="PRIMARY KEY" clustered="False">
	      <column name="TournamentId" />
	    </constraint>
	    <constraint name="FK_Tournament_Organizer" type="FOREIGN KEY" foreignentity="Organizer">
	      <column name="OrganizerId" foreigncolumn="OrganizerId" />
	    </constraint>
	    <constraint name="UN_Tournament_Host" type="UNIQUE">
	      <column name="Host" />
	    </constraint>
	  </constraints>
	</sqlentity>
	<sqlentity name="TournamentFee" view="vwTournamentFee">
	  <columns>
	    <column name="TournamentFeeId" sqltype="int" identity="True" />
	    <column name="TournamentId" sqltype="int" required="true" />
	    <column name="Key" sqltype="varchar" length="50" required="true" />
	    <column name="Fee" sqltype="money" required="true" />
	  </columns>
	  <constraints>
	    <constraint name="PK_TournamentFee" type="PRIMARY KEY" clustered="False">
	      <column name="TournamentFeeId" />
	    </constraint>
	    <constraint name="FK_TournamentFee_Tournament" type="FOREIGN KEY" foreignentity="Tournament">
	      <column name="TournamentId" foreigncolumn="TournamentId" />
	    </constraint>
	  </constraints>
	</sqlentity>
	<sqlentity name="Participant" view="vwParticipant" generateviewscript="False">
	  <columns>
	    <column name="ParticipantId" sqltype="int" identity="True" />
	    <column name="TeamId" sqltype="int" />
	    <column name="TournamentId" sqltype="int" />
	    <column name="GolferId" sqltype="int" />
	    <column name="PaymentId" sqltype="int" required="False" />
	    <column name="IsValid" sqltype="char" length="1" />
	    <column name="RegistrationFee" sqltype="money" />
	    <column name="ConfirmationCode" sqltype="varchar" length="50" viewcolumn="true" />
	    <column name="PaymentDate" sqltype="datetime" viewcolumn="true" />
	  </columns>
	  <constraints>
	    <constraint name="PK_Participant" type="PRIMARY KEY" clustered="False">
	      <column name="ParticipantId" />
	    </constraint>
	    <constraint name="FK_Participant_Tournament" type="FOREIGN KEY" foreignentity="Tournament">
	      <column name="TournamentId" foreigncolumn="TournamentId" />
	    </constraint>
	    <constraint name="FK_Participant_Golfer" type="FOREIGN KEY" foreignentity="Golfer">
	      <column name="GolferId" foreigncolumn="GolferId" />
	    </constraint>
	    <constraint name="FK_Participant_Payment" type="FOREIGN KEY" foreignentity="Payment">
	      <column name="PaymentId" foreigncolumn="PaymentId" />
	    </constraint>
	  </constraints>
	</sqlentity>
	<sqlentity name="Golfer" view="vwGolfer">
	  <columns>
	    <column name="GolferId" sqltype="int" identity="True" />
	    <column name="FirstName" sqltype="varchar" length="50" />
	    <column name="MiddleInitial" sqltype="char" length="1" />
	    <column name="LastName" sqltype="varchar" length="50" />
	    <column name="Phone" sqltype="varchar" length="50" />
	    <column name="Email" sqltype="varchar" length="50" />
	    <column name="Address1" sqltype="varchar" length="50" />
	    <column name="Address2" sqltype="varchar" length="50" />
	    <column name="City" sqltype="varchar" length="50" />
	    <column name="State" sqltype="char" length="2" />
	    <column name="Country" sqltype="varchar" length="50" />
	    <column name="PostalCode" sqltype="varchar" length="10" />
	    <column name="DateOfBirth" sqltype="datetime" />
	    <column name="Handicap" sqltype="decimal" precision="3" scale="1" />
	    <column name="CourseNumber" sqltype="varchar" length="10" />
	    <column name="PlayerNumber" sqltype="varchar" length="10" />
	    <column name="Gender" sqltype="varchar" length="1" />
	    <column name="GolferStatus" sqltype="char" length="1" />
	  </columns>
	  <constraints>
	    <constraint name="PK_Golfer" type="PRIMARY KEY" clustered="False">
	      <column name="GolferId" />
	    </constraint>
	  </constraints>
	</sqlentity>
	<sqlentity name="Team" view="vwTeam">
	  <columns>
	    <column name="TeamId" sqltype="int" identity="True" />
	    <column name="RegistrationKey" sqltype="varchar" length="6" />
	    <column name="Status" sqltype="char" length="1" />
	    <column name="TournamentId" sqltype="int" />
	  </columns>
	  <constraints>
	    <constraint name="PK_Team" type="PRIMARY KEY" clustered="False">
	      <column name="TeamId" />
	    </constraint>
	    <constraint name="FK_Team_Tournament" type="FOREIGN KEY" foreignentity="Tournament">
	      <column name="TournamentId" foreigncolumn="TournamentId" />
	    </constraint>
	  </constraints>
	</sqlentity>
	<sqlentity name="Payment" view="vwPayment">
	  <columns>
	    <column name="PaymentId" sqltype="int" identity="True" />
	    <column name="TournamentId" sqltype="int" />
	    <column name="GolferId" sqltype="int" />
	    <column name="AuthorizationNumber" sqltype="varchar" length="50" />
	    <column name="ReferenceNumber" sqltype="varchar" length="50" />
	    <column name="TransactionNumber" sqltype="varchar" length="50" />
	    <column name="Amount" sqltype="money" />
	    <column name="ProcessDate" sqltype="datetime" />
	    <column name="PaymentStatus" sqltype="varchar" length="10" />
	    <column name="CreditCardNumber" sqltype="varchar" length="25" />
	    <column name="ExpirationDate" sqltype="varchar" length="4" />
	    <column name="CardholderName" sqltype="varchar" length="50" />
	    <column name="Address1" sqltype="varchar" length="50" />
	    <column name="Address2" sqltype="varchar" length="50" />
	    <column name="City" sqltype="varchar" length="50" />
	    <column name="State" sqltype="char" length="2" />
	    <column name="Country" sqltype="varchar" length="50" />
	    <column name="PostalCode" sqltype="varchar" length="10" />
	    <column name="ConfirmationCode" sqltype="varchar" length="50" />
	    <column name="PaymentDate" sqltype="datetime" />
	  </columns>
	  <constraints>
	    <constraint name="PK_Payment" type="PRIMARY KEY" clustered="False">
	      <column name="PaymentId" />
	    </constraint>
	    <constraint name="FK_Payment_Tournament" type="FOREIGN KEY" foreignentity="Tournament">
	      <column name="TournamentId" foreigncolumn="TournamentId" />
	    </constraint>
	    <constraint name="FK_Payment_Golfer" type="FOREIGN KEY" foreignentity="Golfer">
	      <column name="GolferId" foreigncolumn="GolferId" />
	    </constraint>
	  </constraints>
	  <indexes>
	    <index name="IX_Payment_ConfirmationCode" unique="true">
	      <column name="ConfirmationCode" />
	    </index>
	  </indexes>
	</sqlentity>
      </sqlentities>
    </database>
  </databases>
</DataTierGenerator>
